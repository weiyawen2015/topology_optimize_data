"""This is a complete script used to automatically display results generated by the BESO Python code. Created by Zhihao Zuo."""
import customKernel
from caeModules import *
## Function of plotting optimisation results
def pltRslts(mddb):
    itern = len(mddb.customData.History['obj'])
    # Plot volume fraction history
    vp1 = session.Viewport('Volume history',origin=(10,10),width=150,height=100)
    xyPlot1 = session.XYPlot('Volume fraction')
    chart1 = xyPlot1.charts.values()[0]
    volDat = [(k,mddb.customData.History['vol'][k]) for k in range(itern)]
    xydv = session.XYData('Volume fraction',volDat)
    chart1.setValues(curvesToPlot=[session.Curve(xydv)])
    chart1.axes1[0].axisData.setValues(title='Iteration')
    chart1.axes2[0].axisData.setValues(title='Volume fraction')
    vp1.setValues(displayedObject=xyPlot1)
    # Plot objective function history
    vp2 = session.Viewport('Objective history',origin=(20,20),width=150,height=100)
    xyPlot2 = session.XYPlot('Objective function')
    chart2 = xyPlot2.charts.values()[0]
    objDat = [(k,mddb.customData.History['obj'][k]) for k in range(itern)]
    xydo = session.XYData('Objective function',objDat)
    chart2.setValues(curvesToPlot=[session.Curve(xydo)])
    chart2.axes1[0].axisData.setValues(title='Iteration')
    chart2.axes2[0].axisData.setValues(title='Objective function')
    vp2.setValues(displayedObject=xyPlot2)
    # Display final design
    vp3 = session.Viewport('Final design', origin=(30,30),width=150, height=100)   
    p = mddb.models['Model-1'].parts['Part-1']
    vp3.setValues(displayedObject=p)
    vp3.partDisplay.setValues(mesh=ON)
    vp3.partDisplay.displayGroup.remove(leaf=dgm.LeafFromSets(sets=(p.sets['vs'],)))
## ====== MAIN PROGRAM ======
if __name__ == '__main__':
    mddb = openMdb(getInput('Input CAE file:',default='Final_Design.cae'))
    pltRslts(mddb)
